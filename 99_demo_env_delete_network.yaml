---
- hosts: all
  gather_facts: false
  tasks:

    - name: Collect eni info
      amazon.aws.ec2_eni_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: eni

    - debug: var=eni.network_interfaces

    - name: Retrive eni ids
      set_fact:
        delete_ids: "{{ eni.network_interfaces | community.general.json_query(query) }}"
      vars:
        query: "[*].id"

    - debug: var=delete_ids

    - name: delete enis
      when: delete_ids | length > 0
      amazon.aws.ec2_eni:
        eni_id: "{{ item }}"
        state: absent
        region: "{{ region }}"
      loop: "{{ delete_ids }}"

    - name: Collect eip info
      amazon.aws.ec2_eip_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: eip

    - debug: var=eip.addresses

    - name: Retrive global ips of eips
      set_fact:
        delete_ids: "{{ eip.addresses | community.general.json_query(query) }}"
      vars:
        query: "[*].public_ip"

    - debug: var=delete_ids

    - name: delete elastic ips
      when: delete_ids | length > 0
      amazon.aws.ec2_eip:
        public_ip: "{{ item }}"
        state: absent
        region: "{{ region }}"
      loop: "{{ delete_ids }}"

    - name: Collect security groups
      amazon.aws.ec2_group_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: secgroups

    - debug: var=secgroups

    - name: Delete sec group
      amazon.aws.ec2_group:
        region: "{{ region }}"
        group_id: "{{ item.group_id }}"
        state: absent
      loop: "{{ secgroups.security_groups }}"
      when: secgroups.security_groups | length > 0
      register: secgroup_del
      until: secgroup_del is not failed
      retries: 30
      delay: 10

    - name: Collect route tables
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: route_tables

    - debug: var=route_tables

    - name: Delete route table
      amazon.aws.ec2_vpc_route_table:
        region: "{{ region }}"
        route_table_id: "{{ item.id }}"
        vpc_id: "{{ item.vpc_id }}"
        lookup: id
        state: absent
      loop: "{{ route_tables.route_tables }}"
      when: route_tables.route_tables | length > 0
      register: routetable_del
      until: routetable_del is not failed
      retries: 30
      delay: 10

    - name: Collect Internet gateway
      amazon.aws.ec2_vpc_igw_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: igw

    - debug: var=igw

    - name: Remove internet gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ region }}"
        vpc_id: "{{ item.attachments[0].vpc_id }}"
        state: absent
      loop: "{{ igw.internet_gateways }}"
      when: igw.internet_gateways | length > 0
      register: igw_del
      until: igw_del is not failed
      retries: 30
      delay: 10


    - name: Collect subnet info
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: subnets

    - debug: var=subnets

    - name: Remove subnets
      amazon.aws.ec2_vpc_subnet:
        region: "{{ region }}"
        state: absent
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ item.cidr_block }}"
      loop: "{{ subnets.subnets }}"
      when: subnets.subnets | length > 0
      register: subnet_del
      until: subnet_del is not failed
      retries: 30
      delay: 10

    - name: Collect VPC info
      amazon.aws.ec2_vpc_net_info:
        region: "{{ region }}"
        filters:
          "tag:role": "{{ senario_name }}"
      register: vpcs

    - debug: var=vpcs

    - name: Delete VPCs
      amazon.aws.ec2_vpc_net:
        region: "{{ region }}"
        vpc_id: "{{ item.id }}"
        state: absent
      loop: "{{ vpcs.vpcs }}"
      when: vpcs.vpcs | length > 0
      register: vpc_del
      until: vpc_del is not failed
      retries: 10
      delay: 10

    - name: Delete private key
      file:
        path: "{{ senario_name }}-key.pem"
        state: absent

    - name: Delete keypair
      amazon.aws.ec2_key:
        name: "{{ senario_name }}-key"
        region: "{{ region }}"
        state: absent
